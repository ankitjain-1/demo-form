{"version":3,"sources":["components/Form.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","Form","props","classes","useState","prefix","fullName","mobile","addLine1","addLine2","addLine3","town","city","postCode","country","customerType","sourceLead","comments","state","setState","inputChangeHandler","e","name","target","value","Container","maxWidth","onSubmitCapture","preventDefault","console","log","formSubmitHandler","className","Grid","container","item","xs","sm","InputLabel","id","Select","labelId","onChange","MenuItem","TextField","label","variant","type","fullWidth","multiline","Button","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.069358e1.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport {\n  MenuItem,\n  Select,\n  InputLabel,\n  TextField,\n  Grid,\n  Button,\n  Container,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"80%\",\n    },\n  },\n}));\n\nconst Form = (props) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    prefix: \"Mr\",\n    fullName: \"\",\n    mobile: \"\",\n    addLine1: \"\",\n    addLine2: \"\",\n    addLine3: \"\",\n    town: \"\",\n    city: \"\",\n    postCode: \"\",\n    country: \"\",\n    customerType: \"New\",\n    sourceLead: \"Facebook\",\n    comments: \"\",\n  });\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    console.log(\"submitted\");\n    console.log(state);\n  };\n\n  const inputChangeHandler = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setState({ ...state, [name]: value });\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"md\">\n        <form\n          onSubmitCapture={(e) => {\n            formSubmitHandler(e);\n          }}\n          className={classes.root}\n        >\n          <Grid container>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"prefix-label\">Prefix</InputLabel>\n              <Select\n                name=\"prefix\"\n                value={state.prefix}\n                labelId=\"prefix-label\"\n                id=\"prefix\"\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              >\n                <MenuItem value=\"Mr\">Mr.</MenuItem>\n                <MenuItem value=\"Mrs\">Mrs.</MenuItem>\n                <MenuItem value=\"Ms\">Ms.</MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"fullName\"\n                id=\"filled-basic\"\n                label=\"Full Name\"\n                variant=\"filled\"\n                value={state.fullName}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                  console.log(state.fullName);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"mobile\"\n                type=\"number\"\n                id=\"filled-basic\"\n                label=\"Mobile Number\"\n                variant=\"filled\"\n                value={state.mobile}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"addLine1\"\n                id=\"filled-basic\"\n                label=\"Address Line 1\"\n                variant=\"filled\"\n                value={state.addLine1}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"addLine2\"\n                id=\"filled-basic\"\n                label=\"Address Line 2\"\n                variant=\"filled\"\n                value={state.addLine2}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"addLine3\"\n                id=\"filled-basic\"\n                label=\"Address Line 3\"\n                variant=\"filled\"\n                value={state.addLine3}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"town\"\n                id=\"filled-basic\"\n                label=\"Town\"\n                variant=\"filled\"\n                value={state.town}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"city\"\n                id=\"filled-basic\"\n                label=\"City\"\n                variant=\"filled\"\n                value={state.city}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"postCode\"\n                id=\"filled-basic\"\n                label=\"Post Code\"\n                variant=\"filled\"\n                value={state.postCode}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"country\"\n                id=\"filled-basic\"\n                label=\"Country\"\n                variant=\"filled\"\n                value={state.country}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <InputLabel id=\"customer-type\">Customer Type</InputLabel>\n              <Select\n                name=\"customerType\"\n                value={state.customerType}\n                labelId=\"customer-type\"\n                id=\"customer-type-select\"\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              >\n                <MenuItem value=\"New\">New</MenuItem>\n                <MenuItem value=\"Old\">Old</MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={6}>\n              <InputLabel id=\"source-lead-lable\">Source Lead</InputLabel>\n              <Select\n                name=\"sourceLead\"\n                value={state.sourceLead}\n                labelId=\"source-lead-lable\"\n                id=\"source-lead-select\"\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n              >\n                <MenuItem value=\"Facebook\">Facebook</MenuItem>\n                <MenuItem value=\"Google\">Google</MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                name=\"comments\"\n                id=\"filled-basic\"\n                label=\"Comments\"\n                variant=\"filled\"\n                value={state.comments}\n                onChange={(e) => {\n                  inputChangeHandler(e);\n                }}\n                multiline\n              />\n            </Grid>\n          </Grid>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </form>\n      </Container>\n    </>\n  );\n};\n\nexport default Form;\n","import Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}